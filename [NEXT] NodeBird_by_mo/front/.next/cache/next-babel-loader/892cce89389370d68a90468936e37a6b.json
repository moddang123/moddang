{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//state\nexport var initialState = {\n  isLoggedIn: false,\n  user: {\n    nickname: '제로초',\n    desc: 'next.js 정복하고싶어요!!',\n    Post: [],\n    Following: [],\n    Follower: [],\n    isLoggedIn: false\n  }\n}; //actions\n\nexport var LOG_IN = 'LOG_IN'; //액션의 이름\n\nexport var LOG_OUT = 'LOG_OUT';\nexport var loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: null\n  }\n};\nexport var logoutAction = {\n  type: LOG_OUT\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //다음 state를 만듦\n  switch (action.type) {\n    case loginAction:\n      {\n        return _objectSpread({}, state, {\n          //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case logoutAction:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/next_ch/front/reducers/user.js"],"names":["initialState","isLoggedIn","user","nickname","desc","Post","Following","Follower","LOG_IN","LOG_OUT","loginAction","type","data","logoutAction","state","action"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,KADR;AAEFC,IAAAA,IAAI,EAAE,mBAFJ;AAGFC,IAAAA,IAAI,EAAE,EAHJ;AAIFC,IAAAA,SAAS,EAAE,EAJT;AAKFC,IAAAA,QAAQ,EAAE,EALR;AAMFN,IAAAA,UAAU,EAAE;AANV;AAFkB,CAArB,C,CAYP;;AACA,OAAO,IAAMO,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,IAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEH,MADiB;AAEvBI,EAAAA,IAAI,EAAE;AACFT,IAAAA,QAAQ,EAAE;AADR;AAFiB,CAApB;AAMP,OAAO,IAAMU,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAEF;AADkB,CAArB;AAIP,gBAAe,YAAkC;AAAA,MAAjCK,KAAiC,uEAAzBd,YAAyB;AAAA,MAAXe,MAAW;;AAC7C;AACA,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKD,WAAL;AAAkB;AACd,iCACOI,KADP;AACc;AACVb,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAEa,MAAM,CAACH;AAHjB;AAKH;;AACD,SAAKC,YAAL;AAAmB;AACf,iCACOC,KADP;AAEIb,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAE;AAHV;AAKH;;AACD;AAAS;AACL,iCACOY,KADP;AAGH;AAnBL;AAqBH,CAvBD","sourcesContent":["//state\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    user: {\r\n        nickname: '제로초',\r\n        desc: 'next.js 정복하고싶어요!!',\r\n        Post: [],\r\n        Following: [],\r\n        Follower: [],\r\n        isLoggedIn: false,\r\n    },\r\n};\r\n\r\n//actions\r\nexport const LOG_IN = 'LOG_IN'; //액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN,\r\n    data: {\r\n        nickname: null,\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    //다음 state를 만듦\r\n    switch (action.type) {\r\n        case loginAction: {\r\n            return {\r\n                ...state, //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\r\n                isLoggedIn: true,\r\n                user: action.data\r\n            }\r\n        }\r\n        case logoutAction: {\r\n            return{\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}