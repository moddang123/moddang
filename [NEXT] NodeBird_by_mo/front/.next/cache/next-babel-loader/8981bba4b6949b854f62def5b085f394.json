{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\next_ch\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types';\n/*const TextInput = ({value}) => {\r\n    return(\r\n        <div>{value}</div>\r\n    );\r\n};\r\n\r\nTextInput.prototype = {\r\n    value: PropTypes.string,\r\n};*/\n\nvar Signup = function Signup() {\n  /*const [id, setId] = useState('');\r\n  const [nickName, setNickName] = useState('');\r\n  const [password, setPassword] = useState('');*/\n  //커스텀 hook 만들기 - 반복되는 것들이 많을 경우 사용,\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState(false),\n      passwordError = _useState3[0],\n      setPasswordError = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickName = _useInput4[0],\n      onChangeNickName = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id: id,\n      nickName: nickName\n    });\n  }, [password, passwordCheck, term]);\n  /*  const onChangeId = (e) => {\r\n        setId(e.target.value);\r\n    };\r\n    const onChangeNickName  = (e) => {\r\n        setNickName(e.target.value);\r\n    };\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };*/\n\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), \" \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(Input, {\n    \"name-\": \"user-id\",\n    required: true,\n    value: id,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uBCC4\\uBA85\"), \" \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(Input, {\n    \"name-\": \"user-nick\",\n    required: true,\n    value: nickName,\n    onChange: onChangeNickName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), \" \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(Input, {\n    \"name-\": \"user-pass\",\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), \" \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(Input, {\n    \"name-\": \"user-pass-check\",\n    type: \"password\",\n    required: true,\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/user/Desktop/next_ch/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Input","Checkbox","Button","PropTypes","Signup","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","useInput","id","onChangeId","nickName","onChangeNickName","password","onChangePassword","onSubmit","e","preventDefault","console","log","onChangePasswordCheck","target","value","onChangeTerm","checked","color"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\n/*const TextInput = ({value}) => {\r\n    return(\r\n        <div>{value}</div>\r\n    );\r\n};\r\n\r\nTextInput.prototype = {\r\n    value: PropTypes.string,\r\n};*/\r\n\r\nconst Signup = () => {\r\n    /*const [id, setId] = useState('');\r\n    const [nickName, setNickName] = useState('');\r\n    const [password, setPassword] = useState('');*/\r\n    //커스텀 hook 만들기 - 반복되는 것들이 많을 경우 사용,\r\n    \r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm]  = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    \r\n    const [id, onChangeId] = useInput('');\r\n    const [nickName, onChangeNickName] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term) {\r\n            return setTermError(true);\r\n        }\r\n        console.log({\r\n            id, nickName\r\n        });\r\n    }, [password, passwordCheck, term]);\r\n  /*  const onChangeId = (e) => {\r\n        setId(e.target.value);\r\n    };\r\n    const onChangeNickName  = (e) => {\r\n        setNickName(e.target.value);\r\n    };\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };*/\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n            <Form onSubmit={onSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label> <br />\r\n                    {/* Input은 value 와 onChange이 항상 따라와야함. 짝 */}\r\n                    <Input name-=\"user-id\" required value={id} onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">별명</label> <br />\r\n                    <Input name-=\"user-nick\" required value={nickName} onChange={onChangeNickName} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass\">비밀번호</label> <br />\r\n                    <Input name-=\"user-pass\" type=\"password\" required value={password} onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass-check\">비밀번호 확인</label> <br />\r\n                    <Input name-=\"user-pass-check\" type=\"password\" required value={passwordCheck} onChange={onChangePasswordCheck} />\r\n                    {passwordError && <div style={{color:'red'}}>비밀번호 확인해주세요</div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\r\n                        제로초 말을 잘 들을 것을 동의합니다.\r\n                    </Checkbox>\r\n                    {termError && <div style={{color:'red'}}>약관 동의하셔야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n                </div>\r\n            </Form>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}