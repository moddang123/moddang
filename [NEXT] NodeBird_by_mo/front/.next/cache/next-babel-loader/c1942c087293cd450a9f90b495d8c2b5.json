{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//state\nvar dummyUser = {\n  nickname: \"제로초\",\n  desc: \"next.js 정복하고싶어요!!\",\n  Post: [],\n  Following: [],\n  Follower: [],\n  signUpData: []\n};\nexport var initialState = {\n  isLoggedIn: false,\n  user: null\n}; //actions\n\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAIlURE = \"SIGN_UP_FAIURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\"; //액션의 이름\n\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAIlURE = \"LOG_IN_FAIURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\"; //액션의 이름\n\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\"; // export const LOG_OUT_FAILURE = 'LOG_OUT_FAIURE';\n// export const INCREMENT_NUMBER; //동기 요청\n\nexport var signUpAction = function signUpAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\nexport var signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport var loginAction = function loginAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutAction = {\n  type: LOG_OUT_REQUEST\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //다음 state를 만듦\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, _defineProperty({\n          //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\n          isLoggedIn: true,\n          user: dummyUser,\n          loginData: action.data\n        }, \"isLoggedIn\", true));\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, _defineProperty({\n          //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\n          isLoggedIn: true,\n          user: dummyUser\n        }, \"isLoggedIn\", false));\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:/IMYME_STUDY/따라하기/[NEXT] NodeBird_by_mo/front/reducers/user.js"],"names":["dummyUser","nickname","desc","Post","Following","Follower","signUpData","initialState","isLoggedIn","user","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAIlURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAIlURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","signUpAction","data","type","signUpSuccess","loginAction","logoutAction","state","action","loginData"],"mappings":";;;;;;;;;;;;AAAA;AACA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,mBAFU;AAGhBC,EAAAA,IAAI,EAAE,EAHU;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,QAAQ,EAAE,EALM;AAMhBC,EAAAA,UAAU,EAAE;AANI,CAAlB;AAQA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,gBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,eAAvB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CACP;AAEA;;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEV,eADD;AAELS,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,IAAME,aAAa,GAAG;AAC3BD,EAAAA,IAAI,EAAET;AADqB,CAAtB;AAIP,OAAO,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACH,IAAD,EAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEP,cADD;AAELM,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,YAAY,GAAG;AAC1BH,EAAAA,IAAI,EAAEJ;AADoB,CAArB;AAIP,gBAAe,YAAkC;AAAA,MAAjCQ,KAAiC,uEAAzBjB,YAAyB;AAAA,MAAXkB,MAAW;;AAC/C;AACA,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKP,cAAL;AAAqB;AACnB,iCACKW,KADL;AACY;AACVhB,UAAAA,UAAU,EAAE,IAFd;AAGEC,UAAAA,IAAI,EAAET,SAHR;AAIE0B,UAAAA,SAAS,EAAED,MAAM,CAACN;AAJpB,yBAKc,IALd;AAOD;;AACD,SAAKL,cAAL;AAAqB;AACnB,iCACKU,KADL;AACY;AACVhB,UAAAA,UAAU,EAAE,IAFd;AAGEC,UAAAA,IAAI,EAAET;AAHR,yBAIc,KAJd;AAMD;;AACD,SAAKgB,eAAL;AAAsB;AACpB,iCACKQ,KADL;AAEEhB,UAAAA,UAAU,EAAE,KAFd;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKC,eAAL;AAAsB;AACpB,iCACKc,KADL;AAEElB,UAAAA,UAAU,EAAEmB,MAAM,CAACN;AAFrB;AAID;;AACD;AAAS;AACP,iCACKK,KADL;AAGD;AAnCH;AAqCD,CAvCD","sourcesContent":["//state\r\nconst dummyUser = {\r\n  nickname: \"제로초\",\r\n  desc: \"next.js 정복하고싶어요!!\",\r\n  Post: [],\r\n  Following: [],\r\n  Follower: [],\r\n  signUpData: [],\r\n};\r\nexport const initialState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n};\r\n\r\n//actions\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAIlURE = \"SIGN_UP_FAIURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\"; //액션의 이름\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAIlURE = \"LOG_IN_FAIURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\"; //액션의 이름\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\n// export const LOG_OUT_FAILURE = 'LOG_OUT_FAIURE';\r\n\r\n// export const INCREMENT_NUMBER; //동기 요청\r\n\r\nexport const signUpAction = (data) => {\r\n  return {\r\n    type: SIGN_UP_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS,\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutAction = {\r\n  type: LOG_OUT_REQUEST,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  //다음 state를 만듦\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state, //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n        loginData: action.data,\r\n        isLoggedIn: true,\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state, //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n        isLoggedIn: false,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}