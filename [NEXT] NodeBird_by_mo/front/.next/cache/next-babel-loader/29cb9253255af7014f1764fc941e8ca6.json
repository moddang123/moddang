{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//state\nconst dummyUser = {\n  nickname: \"제로초\",\n  desc: \"next.js 정복하고싶어요!!\",\n  Post: [],\n  Following: [],\n  Follower: [],\n  signUpData: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n}; //actions\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAIlURE = \"SIGN_UP_FAIURE\";\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\"; //액션의 이름\n\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAIlURE = \"LOG_IN_FAIURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\"; //액션의 이름\n\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\"; // export const LOG_OUT_FAILURE = 'LOG_OUT_FAIURE';\n// export const INCREMENT_NUMBER; //동기 요청\n// export const signUpAction = (data) => {\n//   return {\n//     type: SIGN_UP_REQUEST,\n//     data,\n//   };\n// };\n\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport const loginAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT_REQUEST\n};\nexport default ((state = initialState, action) => {\n  //다음 state를 만듦\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\n          isLoggedIn: true,\n          user: dummyUser,\n          loginData: action.data,\n          isLoggedIn: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\n          isLoggedIn: true,\n          user: dummyUser,\n          isLoggedIn: false\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:/IMYME_STUDY/따라하기/[NEXT] NodeBird_by_mo/front/reducers/user.js"],"names":["dummyUser","nickname","desc","Post","Following","Follower","signUpData","initialState","isLoggedIn","user","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAIlURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAIlURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","signUpSuccess","type","loginAction","data","logoutAction","state","action","loginData"],"mappings":";;;;;;AAAA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,mBAFU;AAGhBC,EAAAA,IAAI,EAAE,EAHU;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,QAAQ,EAAE,EALM;AAMhBC,EAAAA,UAAU,EAAE;AANI,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,gBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,eAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAA2C;;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CACP;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,IAAI,EAAER;AADqB,CAAtB;AAIP,OAAO,MAAMS,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACLF,IAAAA,IAAI,EAAEN,cADD;AAELQ,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG;AAC1BH,EAAAA,IAAI,EAAEH;AADoB,CAArB;AAIP,gBAAe,CAACO,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAC/C;AACA,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKN,cAAL;AAAqB;AACnB,iCACKU,KADL;AACY;AACVf,UAAAA,UAAU,EAAE,IAFd;AAGEC,UAAAA,IAAI,EAAET,SAHR;AAIEyB,UAAAA,SAAS,EAAED,MAAM,CAACH,IAJpB;AAKEb,UAAAA,UAAU,EAAE;AALd;AAOD;;AACD,SAAKM,cAAL;AAAqB;AACnB,iCACKS,KADL;AACY;AACVf,UAAAA,UAAU,EAAE,IAFd;AAGEC,UAAAA,IAAI,EAAET,SAHR;AAIEQ,UAAAA,UAAU,EAAE;AAJd;AAMD;;AACD,SAAKQ,eAAL;AAAsB;AACpB,iCACKO,KADL;AAEEf,UAAAA,UAAU,EAAE,KAFd;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKC,eAAL;AAAsB;AACpB,iCACKa,KADL;AAEEjB,UAAAA,UAAU,EAAEkB,MAAM,CAACH;AAFrB;AAID;;AACD;AAAS;AACP,iCACKE,KADL;AAGD;AAnCH;AAqCD,CAvCD","sourcesContent":["//state\r\nconst dummyUser = {\r\n  nickname: \"제로초\",\r\n  desc: \"next.js 정복하고싶어요!!\",\r\n  Post: [],\r\n  Following: [],\r\n  Follower: [],\r\n  signUpData: [],\r\n};\r\nexport const initialState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n};\r\n\r\n//actions\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAIlURE = \"SIGN_UP_FAIURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\"; //액션의 이름\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAIlURE = \"LOG_IN_FAIURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\"; //액션의 이름\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\n// export const LOG_OUT_FAILURE = 'LOG_OUT_FAIURE';\r\n\r\n// export const INCREMENT_NUMBER; //동기 요청\r\n\r\n// export const signUpAction = (data) => {\r\n//   return {\r\n//     type: SIGN_UP_REQUEST,\r\n//     data,\r\n//   };\r\n// };\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS,\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutAction = {\r\n  type: LOG_OUT_REQUEST,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  //다음 state를 만듦\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state, //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n        loginData: action.data,\r\n        isLoggedIn: true,\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state, //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n        isLoggedIn: false,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}