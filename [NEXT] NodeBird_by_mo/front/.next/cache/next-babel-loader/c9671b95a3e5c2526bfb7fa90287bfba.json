{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//state\nconst dummyUser = {\n  nickname: '제로초',\n  desc: 'next.js 정복하고싶어요!!',\n  Post: [],\n  Following: [],\n  Follower: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n}; //actions\n\nexport const LOG_IN = 'LOG_IN'; //액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: null\n  }\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\nexport default ((state = initialState, action) => {\n  //다음 state를 만듦\n  switch (action.type) {\n    case loginAction:\n      {\n        return _objectSpread({}, state, {\n          //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case logoutAction:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/next_ch/front/reducers/user.js"],"names":["dummyUser","nickname","desc","Post","Following","Follower","initialState","isLoggedIn","user","LOG_IN","LOG_OUT","loginAction","type","data","logoutAction","state","action"],"mappings":";;;;;;AAAA;AACA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,KADI;AAEdC,EAAAA,IAAI,EAAE,mBAFQ;AAGdC,EAAAA,IAAI,EAAE,EAHQ;AAIdC,EAAAA,SAAS,EAAE,EAJG;AAKdC,EAAAA,QAAQ,EAAE;AALI,CAAlB;AAOA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEH,MADiB;AAEvBI,EAAAA,IAAI,EAAE;AACFZ,IAAAA,QAAQ,EAAE;AADR;AAFiB,CAApB;AAMP,OAAO,MAAMa,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAEF;AADkB,CAArB;AAIP,gBAAe,CAACK,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC7C;AACA,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKD,WAAL;AAAkB;AACd,iCACOI,KADP;AACc;AACVR,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAER;AAHV;AAKH;;AACD,SAAKc,YAAL;AAAmB;AACf,iCACOC,KADP;AAEIR,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAE;AAHV;AAKH;;AACD;AAAS;AACL,iCACOO,KADP;AAGH;AAnBL;AAqBH,CAvBD","sourcesContent":["//state\r\nconst dummyUser = {\r\n    nickname: '제로초',\r\n    desc: 'next.js 정복하고싶어요!!',\r\n    Post: [],\r\n    Following: [],\r\n    Follower: [],\r\n};\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    user: null,\r\n};\r\n\r\n//actions\r\nexport const LOG_IN = 'LOG_IN'; //액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN,\r\n    data: {\r\n        nickname: null,\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    //다음 state를 만듦\r\n    switch (action.type) {\r\n        case loginAction: {\r\n            return {\r\n                ...state, //새로운 객체를 생성, 참조가 달라져서 state값이 달라졌구나 알게됨\r\n                isLoggedIn: true,\r\n                user: dummyUser,\r\n            }\r\n        }\r\n        case logoutAction: {\r\n            return{\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}