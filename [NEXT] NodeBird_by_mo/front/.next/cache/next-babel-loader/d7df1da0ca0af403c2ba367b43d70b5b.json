{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\next_ch\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n// pages는 next router 역할\n//_app.js next에서 제공하는 레이아웃\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout'; // redux state 공유\n\nimport { createStore } from 'Redux';\nimport widthRedux from 'next-redux-wrapper';\nimport { Provider, createStoreHook } from 'react-redux'; //redux state를 제공해줌\n\nimport reducer from '../reducers';\nimport rootReducer from '../reducers';\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.26.11/antd.js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n}; //부모가 나에게 물려준 props\n//자식이 제대로 물려받았는지 확인하는 방법 -> prop-types, prop들의 자료형을 넣는다.\n//페이지의 안전성\n\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType,\n  //jsx에 들어갈 수 있는 전체\n  store: PropTypes.object\n};\nexport default widthRedux(function (initialState, options) {\n  var store = createStore(reducer, initialState);\n  var middlewares = [];\n  return store;\n})(NodeBird);","map":{"version":3,"sources":["C:/Users/user/Desktop/next_ch/front/pages/_app.js"],"names":["React","Head","PropTypes","AppLayout","createStore","widthRedux","Provider","createStoreHook","reducer","rootReducer","NodeBird","Component","store","propTypes","elementType","object","initialState","options","middlewares"],"mappings":";;AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,aAA1C,C,CAAyD;;AACzD,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACvC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,GAAG,EAAE,6DAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,CADJ;AAcH,CAfD,C,CAgBA;AACA;AACA;;;AACAF,QAAQ,CAACG,SAAT,GAAqB;AACjBF,EAAAA,SAAS,EAAET,SAAS,CAACY,WADJ;AACiB;AAClCF,EAAAA,KAAK,EAAEV,SAAS,CAACa;AAFA,CAArB;AAKA,eAAeV,UAAU,CAAC,UAACW,YAAD,EAAeC,OAAf,EAA2B;AACjD,MAAML,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUQ,YAAV,CAAzB;AACA,MAAME,WAAW,GAAG,EAApB;AACA,SAAON,KAAP;AACH,CAJwB,CAAV,CAIXF,QAJW,CAAf","sourcesContent":["// pages는 next router 역할\r\n//_app.js next에서 제공하는 레이아웃\r\n\r\nimport React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport AppLayout from '../components/AppLayout'\r\n\r\n// redux state 공유\r\nimport { createStore } from 'Redux';\r\nimport widthRedux from 'next-redux-wrapper';\r\nimport { Provider, createStoreHook } from 'react-redux'; //redux state를 제공해줌\r\nimport reducer from '../reducers';\r\nimport rootReducer from '../reducers';\r\n\r\nconst NodeBird = ({ Component, store }) => {\r\n    return(\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\" />\r\n                <script src =\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.26.11/antd.js\" />\r\n            </Head>\r\n            <AppLayout>\r\n                {/* {'공통 레이아웃은 _app.js에서 관리'} */}\r\n                <Component />\r\n              {/* index, signup, 등의 (자식)컴포넌트가 들어가짐, _app.js는 부모 컴포넌트라고 생각하면 됨. */}\r\n            </AppLayout>\r\n        </Provider>    \r\n    );\r\n};\r\n//부모가 나에게 물려준 props\r\n//자식이 제대로 물려받았는지 확인하는 방법 -> prop-types, prop들의 자료형을 넣는다.\r\n//페이지의 안전성\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType, //jsx에 들어갈 수 있는 전체\r\n    store: PropTypes.object,\r\n}\r\n\r\nexport default widthRedux((initialState, options) => {\r\n    const store = createStore(reducer, initialState);\r\n    const middlewares = [];\r\n    return store;\r\n}) (NodeBird);"]},"metadata":{},"sourceType":"module"}